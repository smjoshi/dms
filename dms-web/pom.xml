<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.dc.dms</groupId>
	<artifactId>dms-web</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>dms-web</name>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.2.RELEASE</version>
	</parent>


	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- Jersey Dependency -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>

		<!-- Component Dependencies -->
		<dependency>
			<groupId>com.dc.dms</groupId>
			<artifactId>dms-service</artifactId>
			<version>${dms-service-version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<!-- Jersey client -->


		<!-- Spring 4 dependencies -->

		<!-- Logging with logback -->

		<!-- JSTL -->


		<!-- servlet-api for compile only, your container should have this -->

		<!-- Flyway data migration tool -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>4.0.3</version>
		</dependency>

	</dependencies>
	
	<!-- Package as an executable jar -->
	<build>
	    <finalName>${project.artifactId}</finalName>
	
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>


			<!---->
				<!--<plugin>-->
				<!--&lt;!&ndash; NOTE: We don't need a groupId specification because the group is-->
                     <!--org.apache.maven.plugins ...which is assumed by default.-->
                 <!--&ndash;&gt;-->
				<!--<artifactId>maven-assembly-plugin</artifactId>-->
				<!--<version>2.6</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>make-zip</id> &lt;!&ndash; this is used for inheritance merges &ndash;&gt;-->
						<!--<phase>package</phase> &lt;!&ndash; bind to the packaging phase &ndash;&gt;-->
						<!--<goals>-->
							<!--<goal>single</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--<appendAssemblyId>false</appendAssemblyId>-->
					<!--<descriptors>-->
						<!--<descriptor>src/assembly/zip.xml</descriptor>-->
					<!--</descriptors>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<requiresUnpack>
						<dependency>
							<groupId>com.dc.dms</groupId>
							<artifactId>dms-web</artifactId>
						</dependency>
					</requiresUnpack>
					<jvmArguments>
						-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005 -Denv=local
					</jvmArguments>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--<plugin>-->
				<!--<groupId>com.spotify</groupId>-->
				<!--<artifactId>docker-maven-plugin</artifactId>-->
				<!--<version>0.4.9</version>-->
				<!--<configuration>-->
					<!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
					<!--<dockerDirectory>src/main/docker</dockerDirectory>-->
					<!--<resources>-->
						<!--<resource>-->
							<!--<targetPath>/</targetPath>-->
							<!--<directory>${project.build.directory}</directory>-->
							<!--<include>${project.build.finalName}.jar</include>-->
						<!--</resource>-->
					<!--</resources>-->
				<!--</configuration>-->
			<!--</plugin>-->

			<!-- Fly way Maven plugin -->
			<!--<plugin>-->
				<!--<groupId>org.flywaydb</groupId>-->
				<!--<artifactId>flyway-maven-plugin</artifactId>-->
				<!--<version>4.0.3</version>-->
			<!--</plugin>-->

			<!-- Plugin to execute command  "npm install" and "npm run build" inside /angular directory -->
			<!--<plugin>-->
				<!--<groupId>com.github.eirslett</groupId>-->
				<!--<artifactId>frontend-maven-plugin</artifactId>-->
				<!--<version>1.0</version>-->
				<!--<configuration>-->
					<!--<workingDirectory>showcase</workingDirectory>-->
					<!--<installDirectory>temp</installDirectory>-->
				<!--</configuration>-->
				<!--<executions>-->
					<!--&lt;!&ndash; It will install nodejs and npm &ndash;&gt;-->
					<!--<execution>-->
						<!--<id>install node and npm</id>-->
						<!--<goals>-->
							<!--<goal>install-node-and-npm</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<nodeVersion>v4.6.0</nodeVersion>-->
							<!--<npmVersion>3.10.8</npmVersion>-->
						<!--</configuration>-->
					<!--</execution>-->

					<!--&lt;!&ndash; It will execute command "npm install" inside "/angular" directory &ndash;&gt;-->
					<!--<execution>-->
						<!--<id>npm install</id>-->
						<!--<goals>-->
							<!--<goal>npm</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<arguments>install</arguments>-->
						<!--</configuration>-->
					<!--</execution>-->

					<!--&lt;!&ndash; It will execute command "npm build" inside "/angular" directory to clean and create "/dist" directory&ndash;&gt;-->
					<!--<execution>-->
						<!--<id>npm build</id>-->
						<!--<goals>-->
							<!--<goal>npm</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<arguments>run build</arguments>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

			<!-- Plugin to copy the content of /angular/dist/ directory to output directory (ie/ /target/transactionManager-1.0/) -->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-resources-plugin</artifactId>-->
				<!--<version>2.4.2</version>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>default-copy-resources</id>-->
						<!--<phase>process-resources</phase>-->
						<!--<goals>-->
							<!--<goal>copy-resources</goal>-->
						<!--</goals>-->
						<!--<configuration>-->
							<!--<outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/</outputDirectory>-->
							<!--<resources>-->
								<!--<resource>-->
									<!--<directory>${project.basedir}/showcase/dist</directory>-->
								<!--</resource>-->
							<!--</resources>-->
							<!--<overwrite>true</overwrite>-->
						<!--</configuration>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->

		</plugins>
	</build>

	<properties>
		<dms-service-version>1.0-SNAPSHOT</dms-service-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.prefix>dms</docker.image.prefix>	
	</properties>
</project>
