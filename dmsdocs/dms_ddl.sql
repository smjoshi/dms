-- MySQL Script generated by MySQL Workbench
-- 08/14/15 16:14:19
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema DMS
-- -----------------------------------------------------
-- DMS databases schema
DROP SCHEMA IF EXISTS `DMS` ;

-- -----------------------------------------------------
-- Schema DMS
--
-- DMS databases schema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `DMS` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `DMS` ;

-- -----------------------------------------------------
-- Table `DMS`.`USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`USERS` ;

CREATE TABLE IF NOT EXISTS `DMS`.`USERS` (
  `LOGIN_ID` VARCHAR(45) NULL COMMENT '',
  `USER_ID` BIGINT(10) NOT NULL COMMENT '',
  `PASSWORD` VARCHAR(10) NULL COMMENT '',
  `EMAIL_ID` VARCHAR(70) NOT NULL COMMENT '',
  `ORG_NAME` VARCHAR(50) NULL COMMENT '',
  `FIRST_NAME` VARCHAR(50) NULL COMMENT '',
  `LAST_NAME` VARCHAR(50) NULL COMMENT '',
  PRIMARY KEY (`USER_ID`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMS`.`ORGANIZATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`ORGANIZATION` ;

CREATE TABLE IF NOT EXISTS `DMS`.`ORGANIZATION` (
  `ORGNIZATION_ID` BIGINT(10) NOT NULL COMMENT 'This table maintains the dace information of organization / Company / Individual',
  `ORG_NAME` VARCHAR(45) NULL COMMENT '',
  `ORG_TYPE` VARCHAR(45) NULL COMMENT '',
  `USER_ID` BIGINT(10) NOT NULL COMMENT '',
  PRIMARY KEY (`ORGNIZATION_ID`)  COMMENT '',
  CONSTRAINT `fk_ORGANIZATION_USERS`
    FOREIGN KEY (`USER_ID`)
    REFERENCES `DMS`.`USERS` (`USER_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMS`.`PRODUCT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`PRODUCT` ;

CREATE TABLE IF NOT EXISTS `DMS`.`PRODUCT` (
  `PRODUCT_ID` BIGINT(10) NOT NULL COMMENT 'Primary Key',
  `PRODUCT_NAME` VARCHAR(45) NOT NULL COMMENT 'Product Name ',
  `DESCRIPTION` VARCHAR(100) NULL COMMENT 'Product Description',
  `PRODUCT_CODE` VARCHAR(100) NULL COMMENT 'This column can be used to maintain the products uniqued id main by Organization in their system.\n\nThis can be numeric, alphanumeric , alphabets in said organization, we need to decide , how we can use it effectively',
  `ORGNIZATION_ID` BIGINT(10) NOT NULL COMMENT '',
  PRIMARY KEY (`PRODUCT_ID`)  COMMENT '',
  CONSTRAINT `fk_PRODUCT_ORGANIZATION1`
    FOREIGN KEY (`ORGNIZATION_ID`)
    REFERENCES `DMS`.`ORGANIZATION` (`ORGNIZATION_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMS`.`PRODUCT_DOC_TYPE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`PRODUCT_DOC_TYPE` ;

CREATE TABLE IF NOT EXISTS `DMS`.`PRODUCT_DOC_TYPE` (
  `PRODUCT_DOC_TYPE_CODE` VARCHAR(10) NOT NULL COMMENT 'This code determines document type, such as PDF, IMAGE, VIDEO and So on',
  `DESCRIPTION` VARCHAR(45) NULL COMMENT '')
ENGINE = InnoDB
COMMENT = 'Product Document types, This can be used as lookup Table ';


-- -----------------------------------------------------
-- Table `DMS`.`PRODUCT_DOC_CONF`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`PRODUCT_DOC_CONF` ;

CREATE TABLE IF NOT EXISTS `DMS`.`PRODUCT_DOC_CONF` (
  `PR_DOC_CONF_ID` BIGINT(10) NOT NULL COMMENT 'Primary Key',
  `PRODUCT_ID` BIGINT(10) NULL COMMENT 'References to Product Table ',
  `DOC_TYPE_CODE` VARCHAR(10) NULL COMMENT 'Document type code, references to document type, Example : PDF, VIDEO, IMAGE, EXCEL and So',
  `DESCRIPTION` VARCHAR(45) NULL COMMENT 'Description of this document type',
  `IS_MANDATORY` TINYINT(1) NULL COMMENT 'determines if this documendatory for this type of product configuration',
  `GROUP_ID` INT NULL COMMENT 'Not decided use of this column, but idea is to maintain the group of documents for given product configuration',
  `IS_MULTIPLE_ITEM_ALLOWED` TINYINT(1) NULL COMMENT 'To See for this configuration , multiple columns allowed, \nNeed to see how this can be used',
  PRIMARY KEY (`PR_DOC_CONF_ID`)  COMMENT '',
  CONSTRAINT `fk_PRODUCT_DOC_CONF_PRODUCT1`
    FOREIGN KEY (`PRODUCT_ID`)
    REFERENCES `DMS`.`PRODUCT` (`PRODUCT_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_PRODUCT_DOC_CONF_PRODUCT_DOC_TYPE1`
    FOREIGN KEY (`DOC_TYPE_CODE`)
    REFERENCES `DMS`.`PRODUCT_DOC_TYPE` (`PRODUCT_DOC_TYPE_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table maintains the documents configurations for the given product.';


-- -----------------------------------------------------
-- Table `DMS`.`IMG_DOC_CONF_DETAILS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`IMG_DOC_CONF_DETAILS` ;

CREATE TABLE IF NOT EXISTS `DMS`.`IMG_DOC_CONF_DETAILS` (
  `CONF_DETAILS_ID` BIGINT(10) NOT NULL COMMENT 'Primary Key',
  `PRODUCT_DOC_CONF_ID` BIGINT(10) NULL COMMENT 'References to PRODUCT_DOC_CONF table',
  `IMAGE_FORMAT` VARCHAR(10) NULL COMMENT 'IMAGE_TYPE as JPEG, GIF, aCurrently only JPEG supported',
  `IMAGE_HEIGHT` INT NULL COMMENT '',
  `IMAGE_WIDTH` INT NULL COMMENT '',
  PRIMARY KEY (`CONF_DETAILS_ID`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'This table data elaborates the Image document type configuration details';


-- -----------------------------------------------------
-- Table `DMS`.`PRODUCT_DOCUMENTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`PRODUCT_DOCUMENTS` ;

CREATE TABLE IF NOT EXISTS `DMS`.`PRODUCT_DOCUMENTS` (
  `PRODUCT_DOC_ID` BIGINT(10) NOT NULL COMMENT 'Primary Key',
  `PRODUCT_ID` BIGINT(10) NULL COMMENT 'References to Product table',
  `PRODUCT_DOC_CONF_ID` BIGINT(10) NULL COMMENT 'References to the PRODUCT_DOC_CONF table',
  `URL` VARCHAR(200) NULL COMMENT 'Document URL',
  `SEQ_NO` INT NULL COMMENT 'Sequence no of document. Where is the proper place of this attribute, in this table or PRODUCT Doc configuration table.',
  PRIMARY KEY (`PRODUCT_DOC_ID`)  COMMENT '')
ENGINE = InnoDB
COMMENT = 'This table contains the product Documents instances as per configurations';


-- -----------------------------------------------------
-- Table `DMS`.`FEATURE_MASTER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`FEATURE_MASTER` ;

CREATE TABLE IF NOT EXISTS `DMS`.`FEATURE_MASTER` (
  `FEATURE_ID` INT NULL COMMENT '',
  `FEATURE_NAME` VARCHAR(25) NOT NULL COMMENT '',
  `FEATURE_DESC` VARCHAR(50) NULL COMMENT '',
  `LEVEL_IND` INT NOT NULL DEFAULT 0 COMMENT 'Level indicates the template which the dealer will select.\nThe template can be of 1 of 3 types:\n1. Utility - 0\n2. Comfort - 1\n3. Luxury - 2\nAlso, dealers opting for Utility can opt for features from next level feature set with additional cost and predefined time period.',
  PRIMARY KEY (`FEATURE_ID`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `DMS`.`ORG_FEATURE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `DMS`.`ORG_FEATURE` ;

CREATE TABLE IF NOT EXISTS `DMS`.`ORG_FEATURE` (
  `ORGANIZATION_ID` BIGINT(10) NOT NULL COMMENT '',
  `FEATURE_ID` INT NOT NULL COMMENT '',
  `ACTIVE` CHAR(1) NULL COMMENT '',
  `START_DATE` TIMESTAMP NOT NULL COMMENT '',
  `END_DATE` TIMESTAMP NOT NULL COMMENT '',
  PRIMARY KEY (`ORGANIZATION_ID`, `FEATURE_ID`)  COMMENT '')
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
